#pragma once

class CObject;

class CCollider
{
public:

	CCollider();
	CCollider(const CCollider& _origin);
	~CCollider();
	friend class CObject;

public:
	void finalupdate();
	void render(HDC _dc);

	//충돌 시점 함수
	void OnCollision(CCollider* _pOther);		//충돌 중인 경우 호출되는 함수
	void OnCollisionEnter(CCollider* _pOther);  //충돌 진입 함수
	void OnCollisionExit(CCollider* _pOther);	//충돌 종료 함수

public:
	//충돌체끼리 대입연산은 불필요 -> 대입연산자를 없애줌.
	CCollider& operator = (CCollider& _origin) = delete;

public:

	void SetOffsetPos(Vec2 _vPos)
	{
		m_vOffsetPos = _vPos;
	}

	void setScale(Vec2 _vScale)
	{
		m_vScale = _vScale;
	}

public:

	Vec2 GetOffsetPos()
	{
		return m_vOffsetPos;
	}

	Vec2 GetScale()
	{
		return m_vScale;
	}

	UINT GetID()
	{
		return m_iID;
	}

	Vec2 GetFinalPos()
	{
		return m_vFinalPos;
	}

	CObject* GetObj()
	{
		return m_pOwner;
	}

private:
	static	UINT g_iNextID;
	
	CObject* m_pOwner;			//collider를 소유하고 있는 오브젝트
	Vec2	 m_vOffsetPos;		//오브젝트로 부터 상대적인 위치
	Vec2	 m_vFinalPos;		//finalupdate에서 매 프레임마다 계산
	Vec2	 m_vScale;			//충돌체의 크기

	UINT	 m_iID;				//충돌체 고유한 ID 값

	UINT	 m_iCol;
	
};

